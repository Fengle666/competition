<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjq.programmer.dao.ResultMapper">
  <resultMap id="BaseResultMap" type="com.yjq.programmer.domain.Result">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="contest_id" jdbcType="CHAR" property="contestId" />
    <result column="works_id" jdbcType="CHAR" property="worksId" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, contest_id, works_id, score, `rank`, remark
  </sql>
  <select id="selectByExample" parameterType="com.yjq.programmer.domain.ResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from results
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from results
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from results
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yjq.programmer.domain.ResultExample">
    delete from results
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yjq.programmer.domain.Result">
    insert into results (id, user_id, contest_id,
      works_id, score, `rank`,
      remark)
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{contestId,jdbcType=CHAR},
      #{worksId,jdbcType=CHAR}, #{score,jdbcType=DECIMAL}, #{rank,jdbcType=INTEGER},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yjq.programmer.domain.Result">
    insert into results
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contestId != null">
        contest_id,
      </if>
      <if test="worksId != null">
        works_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="rank != null">
        `rank`,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="contestId != null">
        #{contestId,jdbcType=CHAR},
      </if>
      <if test="worksId != null">
        #{worksId,jdbcType=CHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjq.programmer.domain.ResultExample" resultType="java.lang.Integer">
    select count(*) from results
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update results
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.contestId != null">
        contest_id = #{record.contestId,jdbcType=CHAR},
      </if>
      <if test="record.worksId != null">
        works_id = #{record.worksId,jdbcType=CHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.rank != null">
        `rank` = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update results
    set id = #{record.id,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      contest_id = #{record.contestId,jdbcType=CHAR},
      works_id = #{record.worksId,jdbcType=CHAR},
      score = #{record.score,jdbcType=DECIMAL},
      `rank` = #{record.rank,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjq.programmer.domain.Result">
    update results
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="contestId != null">
        contest_id = #{contestId,jdbcType=CHAR},
      </if>
      <if test="worksId != null">
        works_id = #{worksId,jdbcType=CHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="rank != null">
        `rank` = #{rank,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yjq.programmer.domain.Result">
    update results
    set user_id = #{userId,jdbcType=CHAR},
      contest_id = #{contestId,jdbcType=CHAR},
      works_id = #{worksId,jdbcType=CHAR},
      score = #{score,jdbcType=DECIMAL},
      `rank` = #{rank,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
